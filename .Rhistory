# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.00001
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf("\n-------- Iteration %d --------\nloglike = %f\nshape = %f, shape.grad = %f\nscale = %f, scale.grad = %f\nbias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
scale.v
shape.v
lr <- 0.000001
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf("\n-------- Iteration %d --------\nloglike = %f\nshape = %f, shape.grad = %f\nscale = %f, scale.grad = %f\nbias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.0001
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf("\n-------- Iteration %d --------\nloglike = %f\nshape = %f, shape.grad = %f\nscale = %f, scale.grad = %f\nbias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf("\n-------- Iteration %d --------\n
loglike = %f\n
shape = %f, shape.grad = %f\n
scale = %f, scale.grad = %f\n
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf("\n-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.001
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.01
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.1
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.05
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, shape.grad = %f
scale = %f, scale.grad = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad,
scale$data, scale$grad,
shape$data - true_shape, scale$data - true_scale)
cat(output)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
}
lr <- 0.05
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
lr <- 0.1
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
lr <- 0.01
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
lr <- 0.001
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
if (i %% 10 == 0)
{
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
bias = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
}
lr <- 0.0001
for (i in 1:100)
{
loglik <- loglike_weibull(shape, scale, data)
zero_grad(loglik)
backward(loglik)
# update velocity with momentum
shape.v <- beta * shape.v + grad_clip(shape$grad)
scale.v <- beta * scale.v + grad_clip(scale$grad)
# update parameters
shape$data <- shape$data + lr * shape.v
scale$data <- scale$data + lr * scale.v
if (i %% 10 == 0)
{
output <- sprintf(
"-------- Iteration %d --------
loglike = %f
shape = %f, grad = %f, vel = %f
scale = %f, grad = %f, vel = %f
error = %f, %f\n",
i,
loglik$data,
shape$data, shape$grad, shape.v,
scale$data, scale$grad, scale.v,
shape$data - true_shape, scale$data - true_scale)
cat(output)
}
}
library(algebraic.mle)
library(devtools)
install_github("queelius/algebraic.mle")
1
?algebraic.mle
library(devtools)
install_github("queelius/algebraic.mle")
library(femtograd)
devtools::install()
library(femtograd)
pkgdown::build_site_github_pages()
ls
devtools::build_readme()
pkgdown::build_site()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::build()
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::install()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::build()
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::build()
devtools::install()
devtools::install()
